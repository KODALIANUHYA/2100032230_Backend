import sqlite3

conn = sqlite3.connect(':memory:')
cursor = conn.cursor()


cursor.execute('''
    CREATE TABLE locations (
        location_id INTEGER PRIMARY KEY,
        street_address TEXT,
        postal_code TEXT,
        city TEXT,
        state_province TEXT,
        country_id TEXT,
        FOREIGN KEY (country_id) REFERENCES countries(country_id)
    )
''')

cursor.executemany('''
    INSERT INTO locations (location_id, street_address, postal_code, city, state_province, country_id) VALUES (?, ?, ?, ?, ?, ?)
''', [
    (1000, '1297 Via Cola di Rie', '989', 'Roma', None, 'IT'),
    (1100, '93091 Calle della Te', '10934', 'Venice', None, 'IT'),
    (1200, '2017 Shinjuku-ku', '1689', 'Tokyo', 'Tokyo Prefectu', 'JP'),
    (1300, '9450 Kamiya-cho', '6823', 'Hiroshima', None, 'JP'),
    (1400, '2014 Jabberwocky Rd', '26192', 'Southlake', 'Texas', 'US'),
    (1500, '2011 Interiors Blvd', '99236', 'South San', 'California', 'US'),
    (1600, '2007 Zagora St', '50090', 'South Brun', 'New Jersey', 'US'),
    (1700, '2004 Charade Rd', '98199', 'Seattle', 'Washington', 'US'),
    (1800, '147 Spadina Ave', 'MSV 2L7', 'Toronto', 'Ontario', 'CA')
])

cursor.execute('''
    CREATE TABLE countries (
        country_id TEXT PRIMARY KEY,
        country_name TEXT,
        region_id INTEGER
    )
''')


cursor.executemany('''
    INSERT INTO countries (country_id, country_name, region_id) VALUES (?, ?, ?)
''', [
    ('AR', 'Argentina', 2),
    ('AU', 'Australia', 3),
    ('BE', 'Belgium', 1),
    ('BR', 'Brazil', 2),
    ('CA', 'Canada', 2),
    ('CH', 'Switzerland', 1),
    ('CN', 'China', 3),
    ('DE', 'Germany', 1)
])

cursor.execute('''
    SELECT locations.location_id, locations.street_address, locations.city, 
           locations.state_province, countries.country_name
    FROM locations
    JOIN countries ON locations.country_id = countries.country_id
    WHERE countries.country_name = 'Canada'
''')

rows = cursor.fetchall()
for row in rows:
    print(row)

conn.close()
